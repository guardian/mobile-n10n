AWSTemplateFormatVersion: '2010-09-09'
Description: backs up notification azure hubs
Parameters:
  Stack:
    Description: Stack name
    Type: String
    Default: mobile-notifications
  App:
    Description: ApplicationName
    Type: String
    Default: mobile-notifications-backup
  Stage:
    Description:
    Type: String
    AllowedValues:
      - CODE
      - QA
      - PROD
  DeployBucket:
    Description: S3 Bucket where RiffRaff uploads artifacts on Deploy
    Type: String
    Default: mobile-notifications-dist
  ConfigurationBucket:
    Description: S3 Bucket where the app configuration is hosted
    Type: String
    Default: mobile-notifications-dist
  ConfigurationFileName:
    Description: Name of the file containing the application configuration
    Type: String
    Default: report.properties
Resources:
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        - Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service:
              - lambda.amazonaws.com
      Path: /
      Policies:
        - PolicyName:
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: "*"
        - PolicyName: invoke-lambda
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: "*"
        - PolicyName: iam-read-and-assume
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - iam:PassRole
                - iam:GenerateCredentialReport
                - iam:Get*
                - iam:List*
              Resource: "*"

  BackupLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${App}-${Stage}
      Code:
        S3Bucket: !Ref DeployBucket
        S3Key: !Sub ${Stack}/${Stage}/${App}/${App.properties}
      Environment:
        Variables:
          ConfigurationBucket: !Ref ConfigurationBucket
          ConfigurationKey: !Sub ${Stage}/${App}/${App}.properties
          Stage: !Sub ${Stage}
      Description: Lambda to backup notification azure hubs
      Handler: com.vlag
      MemorySize: 384
      Role: !GetAtt ExecutionRule.getArn
      Runtime: java8
      Timeout: 60

  BackupHourlyEvent:
    Type: AWS::Lambda::Function
    Properties:
      Description: Backs up every hour
      ScheduleExpression: cron(* * * ? * *)
      Targets:
        - Id: BackupLambda
          Arn: !GetAtt BackupLamda.Arn

  BackupHourlyEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt BackupLambda.Arn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt BackupHourlyEvent.Arn




