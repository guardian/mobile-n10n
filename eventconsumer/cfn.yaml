AWSTemplateFormatVersion: 2010-09-09
Description: Consumes events produced when an app receives a notification
Parameters:
  Stack:
    Description: Stack name
    Type: String
    Default: mobile-notifications
  App:
    Description: Application name
    Type: String
    Default: eventconsumer
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
    - CODE
    - PROD
    Default: CODE
  DeployBucket:
    Description: Bucket where RiffRaff uploads artifacts on deploy
    Type: String
    Default: mobile-notifications-dist
Mappings:
  StageVariables:
    CODE:
      BucketStage: code
    PROD:
      BucketStage: prod
Resources:
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Statement:
            Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
      - PolicyName: lambda
        PolicyDocument:
          Statement:
            Effect: Allow
            Action:
            - lambda:InvokeFunction
            Resource: "*"
      - PolicyName: s3
        PolicyDocument:
          Statement:
            Effect: Allow
            Action:
            - s3:GetObject
            Resource:
            - !Sub
              - aws-mobile-event-logs-${BucketStage}
              - BucketStage: !FindInMap [StageVariables, !Ref Stage, BucketStage]
            - !Sub
              - aws-mobile-event-logs-${BucketStage}/*
              - BucketStage: !FindInMap [StageVariables, !Ref Stage, BucketStage]

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${App}-${Stage}
      Code:
        S3Bucket:
          Ref: DeployBucket
        S3Key: !Sub ${Stack}/${Stage}/${App}/${App}.jar
      Environment:
        Variables:
          Stage: !Ref Stage
          Stack: !Ref Stack
          App: !Ref App
          EventBucket: !Sub
          - aws-mobile-event-logs-${BucketStage}
          - BucketStage: !FindInMap [StageVariables, !Ref Stage, BucketStage]
      Description: Consumes events produced when an app receives a notification
      Handler: com.gu.notifications.events.Lambda::handleRequest
      MemorySize: 320
      Role: !GetAtt ExecutionRole.Arn
      Runtime: java8
      Timeout: 60

  S3Bucket:
    Type: AWS::S3::Bucket
    DependsOn: LambdaPermissionS3Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub
      - aws-mobile-event-logs-${BucketStage}
      - BucketStage: !FindInMap [StageVariables, !Ref Stage, BucketStage]
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: s3:ObjectCreated:*
          Function: !GetAtt Lambda.Arn
  LambdaPermissionS3Bucket:
    DependsOn:
    - Lambda
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Lambda.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub
      - arn:aws:s3:::aws-mobile-event-logs-${BucketStage}
      - BucketStage: !FindInMap [StageVariables, !Ref Stage, BucketStage]